<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.syq.biz.mapper.AccountMapper">

	<resultMap type="com.syq.biz.bo.AccountBo" id="accountBoMap">
		<id property="id" column="id"></id>
		<result property="userName" column="user_name" />
		<result property="password" column="password" />
		<result property="createTime" column="create_time" />
		<result property="operatorId" column="operator_id" />
		<result property="operatorTime" column="operator_time" />
		<result property="contactPhone" column="contact_phone" />
		<result property="lastLoginTime" column="last_login_time" />
		<result property="mobile" column="mobile" />
		<result property="contactEmail" column="contact_email" />
		<result property="deptName" column="dept_name" />
	</resultMap>

	<insert id="save" parameterType="com.syq.biz.domain.Account">
		INSERT INTO account (
		USER_NAME,
		PASSWORD,
		CREATE_TIME,
		OPERATOR_ID,
		OPERATOR_TIME
		<if test="lastLoginTime != null and lastLoginTime != ''">
			,LAST_LOGIN_TIME
		</if>
		<if test="contactPhone != null and contactPhone != ''">
			,CONTACT_PHONE
		</if>
		<if test="mobile != null and mobile != ''">
			,MOBILE
		</if>
		<if test="contactEmail != null and contactEmail != ''">
			,CONTACT_EMAIL
		</if>
		<if test="deptName != null and deptName != ''">
			,DEPT_NAME
		</if>
		)
		VALUES
		(
		#{userName},
		#{password},
		#{createTime},
		#{operatorId},
		#{operatorTime}
		<if test="lastLoginTime != null and lastLoginTime != ''">
			,#{lastLoginTime}
		</if>
		<if test="contactPhone != null and contactPhone != ''">
			,#{contactPhone}
		</if>
		<if test="mobile != null and mobile != ''">
			,#{mobile}
		</if>
		<if test="contactEmail != null and contactEmail != ''">
			,#{contactEmail}
		</if>
		<if test="deptName != null and deptName != ''">
			,#{deptName}
		</if>
		)
	</insert>


	<update id="update" parameterType="com.syq.biz.domain.Account">
		UPDATE account
		<trim prefix="set" suffixOverrides=",">
			<if test="userName != null and userName != ''">USER_NAME=#{userName},</if>
			<if test="password != null and password != ''">PASSWORD=#{password},</if>
			<if test="operatorId != null and operatorId != ''">OPERATOR_ID=#{operatorId},</if>
			<if test="operatorTime != null">OPERATOR_TIME=#{operatorTime},</if>
			<if test="contactPhone != null and contactPhone != ''">CONTACT_PHONE=#{contactPhone},</if>
			<if test="mobile != null and mobile != ''">MOBILE=#{mobile},</if>
			<if test="contactEmail != null and contactEmail != ''">CONTACT_EMAIL=#{contactEmail},</if>
			<if test="deptName != null and deptName != ''">DEPT_NAME=#{deptName},</if>
		</trim>
		WHERE id=#{id}
		
	</update>

	<select id="selectByCondition" parameterType="com.syq.pagination.common.AccountPo"
		resultMap="accountBoMap">
		SELECT *
		FROM
		account
		<trim prefix="where" prefixOverrides="AND | OR">
			<if test="userName != null and userName != ''">
				user_name like CONCAT('%',#{userName},'%')
			</if>

			<if test="createBeginTime != null ">
				and create_time <![CDATA[>=]]>
				#{createBeginTime}
			</if>
			<if test="createEndTime != null ">
				and create_time <![CDATA[<=]]>
				#{createEndTime}
			</if>

		</trim>

		<if test="sortField != null and sortField != ''">
			order by ${sortField}
			<if test="sortOrder != null and sortOrder != '' ">
				${sortOrder}
			</if>
		</if>
		<if test="start != null and maxResults != null">
			limit ${start}, ${maxResults}
		</if>
	</select>

	<select id="getCount" parameterType="com.syq.pagination.common.AccountPo"
		resultType="int">
		SELECT count(*)
		FROM
		account
		<trim prefix="where" prefixOverrides="AND | OR">
			<if test="userName != null and userName != ''">
				user_name like CONCAT('%',#{userName},'%')
			</if>

			<if test="createBeginTime != null ">
				and create_time <![CDATA[>=]]>
				#{createBeginTime}
			</if>
			<if test="createEndTime != null ">
				and create_time <![CDATA[<=]]>
				#{createEndTime}
			</if>

		</trim>
	</select>

	<select id="selectAccountBoById" parameterType="long" resultMap="accountBoMap">
		SELECT *
		FROM
		account
		WHERE id = #{id}
	</select>

	<delete id="deleteByIds" parameterType="long">
		delete from account where id in
		<foreach item="id" collection="array" open="(" separator=","
			close=")">
			#{id}
		</foreach>
	</delete>
	
	<select id="selectAccountsByTaskId" parameterType="long" resultMap="accountBoMap">
		SELECT *
		FROM
		account account,task_account ta
		WHERE account.id = ta.account_id and ta.task_id = #{taskId}
	</select>

</mapper>